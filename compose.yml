services:
  # check-location-api:
  #   image: golang #https://golangexample.com/geolocation-rest-api-obtain-ip-address-geolocation-data/
  #   ports:
  #     - "443:8043"
  #   networks:
  #     - front-tier
  #     - back-tier

  # frontend:
  #   container_name: frontend-container
  #   image: frontend
  #   ports:
  #     - "8000:8000"
  #   networks:
  #     - front-tier
  #     - back-tier

  # server-app:
  #   container_name: server-container
  #   image: server
  #   ports:
  #     - "1234:1234"
  check_location-api:
    container_name: check-location-api_container
    image: check_location
    ports:
      - "3005:3005"
  grafana:
    container_name: grafana-container
    image: grafana/grafana
    networks:
      - back-tier
    ports:
      - "3000:3000"
    volumes:
      - "./internal/grafana:/etc/grafana/provisioning"
  db:
    container_name: pg-container
    image: timescale/timescaledb:latest-pg14
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: monitoring_system
    ports:
      - "5432:5432"
    volumes:
      - ./internal/postgresql/schema:/docker-entrypoint-initdb.d/
      - "./internal/postgresql/data:/var/lib/postgresql/data/"
    networks:
      - back-tier
networks:
 # front-tier: {}
  back-tier: {}